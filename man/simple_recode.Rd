% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toolkits.R
\name{simple_recode}
\alias{simple_recode}
\alias{simple_recode.data.frame}
\alias{recode_var}
\alias{var_recode}
\alias{simple_recode.default}
\title{Do a simple recode via pattern for data}
\usage{
simple_recode(...)

\method{simple_recode}{data.frame}(.data, ..., ignore.case = FALSE, perl = TRUE)

\method{simple_recode}{default}(
  x,
  map,
  as = c("as_is", "numeric", "factor", "character", "logical"),
  ignore.case = FALSE,
  perl = TRUE,
  ...
)
}
\arguments{
\item{...}{For data.frame: Replacement in the form of var = map. Maps must follow the syntax stipulated in the map parameter.

For default method: Additional parameters passed to factor()}

\item{.data}{A data frame to modify}

\item{ignore.case, perl}{Parameters passed to gsub().}

\item{perl}{Are patterns follow the Perl-style regular expression.}

\item{x}{a vector}

\item{map}{A map.

Map can be a list in the form of recoded_text = c(to_be_recoded_text)

Or as a data frame having 2 columns named "from" and "to".}

\item{as}{A character string defining the post-recoded data type of x. Default is keeping as-is.}

\item{ignore.case}{Specify whether the pattern is case-insensitive. Default is FALSE (case sensitive)}
}
\value{
A data frame with recoded variables.

If input is a vector, return a vector of the same length.

If input is a data frame, return a data frame with relevant variables recoded.
}
\description{
A function to re-encode data by using a map. Patterns are accepted. Unmentioned data are left intact.

Method for class data.frame supports a robust replacement for data by providing relevant map in the form of var = map.
}
\seealso{
\link{regex} \link{case_when}
}
